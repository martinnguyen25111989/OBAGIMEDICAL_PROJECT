@model SitemapModel
@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Sitemap").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-sitemap-page");
}
<div class="page sitemap-page">
    <div class="page-title cx_page-header">
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <h1>@T("Sitemap")</h1>
                </div>
            </div>
        </div>
    </div>
    <div class="page-body container py-5">
        <div class="description">
            @T("Sitemap.Description")
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.SitemapBefore, additionalData = Model })
        @foreach (var itemGroup in Model.Items.GroupBy(itemGroup => itemGroup.GroupTitle))
        {
            <div class="entity pt-4 pb-5">
                <div class="entity-title">
                    <h5>@itemGroup.Key</h5>
                </div>
                <div class="entity-body">
                    <ul class="row">
                        @foreach (var item in itemGroup.ToList())
                        {
                            <li class="col-sm-6 col-md-4"><a href="@item.Url">@item.Name</a></li>
                        }
                    </ul>
                </div>
            </div>
        }
        @{
            var pager = Html.Pager(Model.PageModel).QueryParam("pagenumber");
            if (!(await pager.IsEmpty()))
            {
                <div class="pager">
                    @pager
                </div>
            }
        }
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.SitemapAfter, additionalData = Model })
    </div>
</div>
