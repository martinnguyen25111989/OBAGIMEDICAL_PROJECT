@model ApplyVendorModel

@{
    Layout = "_ColumnsOne";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Vendors.Apply").Text);
    //page class
    NopHtml.AppendPageCssClassParts("html-apply-vendor-page");
}
<div class="page apply-vendor-page">
    <div class="page-title cx_page-header">
        <div class="container-fluid">
            <div class="row">
                <div class="col">
                    <h1>@T("PageTitle.Vendors.Apply")</h1>
                </div>
            </div>
        </div>
    </div>
    <div class="page-body container py-5">
        <div class="row">
            <div class="col-md-6 offset-md-3">
                @await Component.InvokeAsync(typeof(TopicBlockViewComponent), new { systemName = "ApplyVendor" })
                @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ApplyVendorTop, additionalData = Model })
                @if (Model.DisableFormInput)
                {
                    <div class="result">
                        @Model.Result
                    </div>
                }
                else
                {
                    <form asp-route="ApplyVendorAccount" method="post" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="message-error"></div>
                        <div class="fieldset">
                            <div class="form-fields">
                                <div class="inputs form-group">
                                    <label asp-for="Name" asp-postfix=":"></label>
                                    <div class="input-group">
                                        <input asp-for="Name" class="name form-control border-right-0" placeholder="@T("Vendors.ApplyAccount.Name.Hint")" />
                                        <div class="input-group-append input-group-text bg-transparent border-left-0 no-radius-tb-l">
                                           <nop-required />
                                        </div>                                       
                                    </div>                                                               
                                    <span asp-validation-for="Name"></span>
                                </div>
                                <div class="inputs form-group">
                                    <label asp-for="Email" asp-postfix=":"></label>
                                    <div class="input-group">
                                        <input asp-for="Email" class="name form-control border-right-0" placeholder="@T("Vendors.ApplyAccount.Email.Hint")" />
                                        <div class="input-group-append input-group-text bg-transparent border-left-0 no-radius-tb-l">
                                            <nop-required />
                                        </div>
                                    </div>
                                    <span asp-validation-for="Email"></span>
                                </div>
                                <div class="inputs form-group">
                                    <label asp-for="Description" asp-postfix=":"></label>
                                    <textarea asp-for="Description" class="description form-control"></textarea>
                                </div>
                                <div class="inputs form-group">
                                    <label>@T("Vendors.ApplyAccount.Picture"):</label>
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" name="uploadedFile" accept="image/*" id="customFile">
                                        <label class="custom-file-label" for="customFile">Choose file</label>
                                    </div>
                                </div>
                                @await Html.PartialAsync("_VendorAttributes", Model.VendorAttributes)
                                @if (Model.DisplayCaptcha)
                                {
                                    <nop-captcha />
                                }
                                @if (Model.TermsOfServiceEnabled)
                                {
                                    <script asp-location="Footer">
                                        $(document).ready(function () {
                                            $('#apply-vendor').on('click', function () {
                                                if ($('#termsofservice').is(':checked')) {
                                                    //do some stuff
                                                    return true;
                                                } else {
                                                    //just show validation errors, dont post
                                                    alert('@Html.Raw(JavaScriptEncoder.Default.Encode(T("Vendors.ApplyAccount.AcceptTermsOfService.Required").Text))');
                                                    return false;
                                                }
                                            });
                                        });
                                    </script>
                                    <div class="terms-of-service">
                                        <input id="termsofservice" type="checkbox" name="termsofservice" />
                                        <label for="termsofservice">@T("Vendors.ApplyAccount.AcceptTermsOfService")</label>
                                        @if (Model.TermsOfServicePopup)
                                        {
                                            <span class="read" id="read-acceptterms">@T("Vendors.ApplyAccount.AcceptTermsOfService.Read")</span>
                                            <script asp-location="Footer">
                                                $(document).ready(function () {
                                                    $('#read-acceptterms').on('click',
                                                        function (e) {
                                                            displayPopupContentFromUrl(
                                                                '@Url.RouteUrl("TopicPopup", new {SystemName = "VendorTermsOfService"})',
                                                                '@T("Vendors.ApplyAccount.AcceptTermsOfService")');
                                                        });
                                                });
                                            </script>
                                        }
                                        else
                                        {
                                            <a class="read" id="read-acceptterms" href="@Url.RouteTopicUrl("VendorTermsOfService")">@T("Vendors.ApplyAccount.AcceptTermsOfService.Read")</a>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="buttons">
                            <button type="submit" id="apply-vendor" name="apply-vendor" class="button-1 apply-vendor-button btn btn-primary mw-150">@T("Vendors.ApplyAccount.Button")</button>
                        </div>
                    </form>
                }
            </div>
        </div>
        @await Component.InvokeAsync(typeof(WidgetViewComponent), new { widgetZone = PublicWidgetZones.ApplyVendorBottom, additionalData = Model })
    </div>
</div>
